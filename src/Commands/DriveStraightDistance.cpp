// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

#include "DriveStraightDistance.h"

DriveStraightDistance::DriveStraightDistance(double distance) { //distance is in inches
	startingPoint = Robot::driveTrain->GetAverageDistance();
	Requires(Robot::driveTrain);
	this->distance = distance;
}

// Called just before this Command runs the first time
void DriveStraightDistance::Initialize() {
	this->startingPoint = Robot::driveTrain->GetAverageDistance();
}

// Called repeatedly when this Command is scheduled to run
void DriveStraightDistance::Execute() {
	if (distance > 0) {
		Robot::driveTrain->Drive(0.9, 0.9);
	} else {
		Robot::driveTrain->Drive(-0.9, -0.9);
	}
}

// Make this return true when this Command no longer needs to run execute()
bool DriveStraightDistance::IsFinished() {
	return abs((Robot::driveTrain->GetAverageDistance() - startingPoint)
					- distance) < 0.05;
}

// Called once after isFinished returns true
void DriveStraightDistance::End() {
	Robot::driveTrain->Stop();
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void DriveStraightDistance::Interrupted() {
	End();

}
